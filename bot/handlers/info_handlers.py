from aiogram import Router, types, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext

from bot.keyboards.info_boards import info_menu, form_filter
from bot.keyboards.user_boards import reply_start
from bot.utils.requests import set_expert_data, set_student_data
from bot.utils.states import User, StudyInfo, ExpertInfo

router = Router()


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è info –º–µ–Ω—é (message)
@router.message(F.text.lower().contains("—É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –ø—Ä–æ —Ä–∞–±–æ—Ç—É —Ü–µ–Ω—Ç—Ä–∞"))
async def info_menu_handler(message: types.Message, state: FSMContext):
    await state.set_state(User.info_active)

    text, reply_markup = info_menu()
    await message.answer(text=text,
                         reply_markup=reply_markup)


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è info_study –º–µ–Ω—é
@router.message(StateFilter(User.info_active),
                ~F.text.lower().contains("–Ω–∞—á–∞—Ç—å –∫–≤–µ—Å—Ç"))
async def callback_info_study_handler(message: types.Message):
    _, reply_markup = reply_start()
    await message.answer(text="–ù–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è üòî",
                         reply_markup=reply_markup)


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è info –º–µ–Ω—é (callback)
@router.callback_query(F.data == "cancel_form")
async def callback_info_menu_handler(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.delete()
    await state.set_state(User.info_active)

    _, reply_markup = reply_start()
    await callback.message.answer(text="–ü–æ–¥–∞—á–∞ —Ñ–æ—Ä–º—ã –æ—Ç–º–µ–Ω–µ–Ω–∞ üòî",
                                  reply_markup=reply_markup)
    await callback.answer()


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è info_study –º–µ–Ω—é
@router.callback_query(F.data == "info_study", StateFilter(User.info_active))
async def callback_info_study_handler(callback: types.CallbackQuery):
    text, reply_markup = form_filter(study=True)

    await callback.message.answer(text=text,
                                  reply_markup=reply_markup)
    await callback.answer()


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è study_form —Ñ–æ—Ä–º—ã (–ó–∞–ø—Ä–æ—Å –ò–§)
@router.callback_query(F.data == "study_form", StateFilter(User.info_active))
async def callback_info_study_form_handler(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(StudyInfo.name)
    await callback.message.answer(text="–ò–º—è –§–∞–º–∏–ª–∏—è:")
    await callback.answer()


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è study_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –ò–§)
@router.message(StateFilter(StudyInfo.name), F.text)
async def info_study_name_handler(message: types.Message, state: FSMContext):
    await set_student_data(chat_id=message.chat.id,
                           username=message.from_user.username,
                           name=message.text)

    await state.set_state(StudyInfo.program)
    await message.answer(text="–ü—Ä–æ–≥—Ä–∞–º–º–∞:")


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è study_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ò–§)
@router.message(StateFilter(StudyInfo.name), ~F.text)
async def incorrect_info_study_name_handler(message: types.Message):
    await message.answer(text="–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö!")


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è study_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã)
@router.message(StateFilter(StudyInfo.program), F.text)
async def info_study_program_handler(message: types.Message, state: FSMContext):
    await set_student_data(chat_id=message.chat.id,
                           program=message.text)

    await state.set_state(StudyInfo.contact)
    await message.answer(text="–ö–æ–Ω—Ç–∞–∫—Ç—ã:")


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è study_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º)
@router.message(StateFilter(StudyInfo.program), ~F.text)
async def incorrect_info_study_program_handler(message: types.Message):
    await message.answer(text="–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö!")


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è study_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤)
@router.message(StateFilter(StudyInfo.contact), F.text)
async def info_study_contacts_handler(message: types.Message, state: FSMContext):
    await set_student_data(chat_id=message.chat.id,
                           contact=message.text)

    await message.answer(text="–°–ø–∞—Å–∏–±–æ, –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–Ω—è—Ç—ã.\n–ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏!")

    await state.set_state(User.info_active)
    await info_menu_handler(message, state)


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è study_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º)
@router.message(StateFilter(StudyInfo.contact), ~F.text)
async def incorrect_info_study_contacts_handler(message: types.Message):
    await message.answer(text="–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö!")


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è info_expert –º–µ–Ω—é
@router.callback_query(F.data == "info_expert", StateFilter(User.info_active))
async def callback_info_expert_handler(callback: types.CallbackQuery):
    text, reply_markup = form_filter(study=False)

    await callback.message.answer(text=text,
                                  reply_markup=reply_markup)
    await callback.answer()


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è expert_form —Ñ–æ—Ä–º—ã
@router.callback_query(F.data == "expert_form", StateFilter(User.info_active))
async def info_expert_form_handler(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(ExpertInfo.name)
    await callback.message.answer(text="–ò–º—è –§–∞–º–∏–ª–∏—è:")
    await callback.answer()


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è expert_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –ò–§)
@router.message(StateFilter(ExpertInfo.name), F.text)
async def info_expert_name_handler(message: types.Message, state: FSMContext):
    await set_expert_data(chat_id=message.chat.id,
                          username=message.from_user.username,
                          name=message.text)

    await state.set_state(ExpertInfo.area_of_expertise)
    await message.answer(text="–°—Ñ–µ—Ä–∞ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç–∏:")


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è expert_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ò–§)
@router.message(StateFilter(ExpertInfo.name), ~F.text)
async def incorrect_info_expert_name_handler(message: types.Message):
    await message.answer(text="–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö!")


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è expert_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ—Å—Ç–∞ —Å—Ñ–µ—Ä—ã —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç–∏)
@router.message(StateFilter(ExpertInfo.area_of_expertise), F.text)
async def info_expert_area_of_expertise_handler(message: types.Message, state: FSMContext):
    await set_expert_data(chat_id=message.chat.id,
                          area_of_expertise=message.text)

    await state.set_state(ExpertInfo.place_of_work)
    await message.answer(text="–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã, —Ä–µ–≥–∞–ª–∏–∏:")


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è expert_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ñ–µ—Ä—ã —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ—Å—Ç–∏)
@router.message(StateFilter(ExpertInfo.area_of_expertise), ~F.text)
async def incorrect_info_area_of_expertise_handler(message: types.Message):
    await message.answer(text="–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö!")


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è expert_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã)
@router.message(StateFilter(ExpertInfo.place_of_work), F.text)
async def info_expert_place_of_work_handler(message: types.Message, state: FSMContext):
    await set_expert_data(chat_id=message.chat.id,
                          place_of_work=message.text)

    await state.set_state(ExpertInfo.contact)
    await message.answer(text="–ö–æ–Ω—Ç–∞–∫—Ç—ã:")


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è expert_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã)
@router.message(StateFilter(ExpertInfo.place_of_work), ~F.text)
async def incorrect_info_expert_place_of_work_handler(message: types.Message):
    await message.answer(text="–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö!")


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è expert_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤)
@router.message(StateFilter(ExpertInfo.contact), F.text)
async def info_expert_contacts_handler(message: types.Message, state: FSMContext):
    await set_expert_data(chat_id=message.chat.id,
                          contact=message.text)

    await state.set_state(User.info_active)
    _, reply_markup = reply_start()
    await message.answer(text="–°–ø–∞—Å–∏–±–æ, –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–Ω—è—Ç—ã.\n–ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏!",
                         reply_markup=reply_markup)


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è expert_form —Ñ–æ—Ä–º—ã (–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º)
@router.message(StateFilter(ExpertInfo.contact), ~F.text)
async def incorrect_info_expert_contacts_handler(message: types.Message):
    await message.answer(text="–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö!")
